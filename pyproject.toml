[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wbor-failsafe-notifier"
version = "0.1.0"
description = "Monitors digital input and sends notifications when failsafe switches sources"
authors = [
    {name = "Mason Daugherty", email = "github@mdrxy.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "Adafruit-Blinka>=8.56",
    "adafruit-circuitpython-busdevice>=5.2",
    "adafruit-circuitpython-connectionmanager>=3.1",
    "adafruit-circuitpython-requests>=4.1",
    "adafruit-circuitpython-typing>=1.11",
    "Adafruit-PlatformDetect>=3.77",
    "Adafruit-PureIO>=1.1",
    "binho-host-adapter>=0.1",
    "certifi>=2025.1",
    "charset-normalizer>=3.4",
    "idna>=3.10",
    "pyftdi>=0.56.0",
    "pyserial>=3.5",
    "python-dotenv>=1.0",
    "pyusb>=1.3",
    "requests>=2.32",
    "typing_extensions>=4.12",
    "urllib3>=2.3",
    "colorlog>=6.9",
    "pytz>=2025.2",
    "pika>=1.3",
]

[project.urls]
repository = "https://github.com/wbor-fm/wbor-failsafe-notifier"

[tool.setuptools]
packages = ["utils"]

[tool.setuptools.package-dir]
utils = "utils"

[tool.uv]
dev-dependencies = [
    "ruff>=0.12",
    "mypy>=1.17",
    "types-pytz",
    "types-requests",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    # Rules that conflict with formatter
    "COM812",   # missing-trailing-comma
    "ISC001",   # single-line-implicit-string-concatenation
    "D203",     # 1 blank line required before class docstring (conflicts with D211)
    "D213",     # Multi-line docstring summary should start at the second line (conflicts with D212)
    
    # Overly strict
    "D100",     # Missing docstring in public module
    "D104",     # Missing docstring in public package
    
    # Not applicable to hardware projects
    "S311",     # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S324",     # Probable use of insecure hash functions

    # Complexity rules - acceptable for business logic in hardware monitoring
    "C901",     # Function is too complex (Discord/DJ notification logic inherently complex)
    "PLR0911",  # Too many return statements (error handling requires multiple early returns)
    "PLR0912",  # Too many branches (business logic requires many conditional paths)
    "PLR0913",  # Too many arguments (pika callback signatures require many parameters)
    "PLR0915",  # Too many statements in function (notification logic requires many steps)
    
    # Exception handling - necessary for robust hardware monitoring
    "BLE001",   # Catching blind exception (acceptable for hardware fault tolerance)
    "PERF203",  # Try-except within a loop (necessary for robust network operations)
]

fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore certain rules in test files
"test_*.py" = [
    "S101",    # Use of assert in tests is expected
    "D100",    # Missing module docstring in test files
    "D103",    # Missing function docstring in test files  
]

# Allow print statements in scripts
"*.py" = [
    "T201",    # Allow print statements in general scripts
]

[tool.ruff.format]
line-ending = "auto"
quote-style = "double"
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
# Force imports to be sorted
force-sort-within-sections = true
known-first-party = ["utils"]

[tool.ruff.lint.flake8-quotes]
# Use double quotes
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_subclassing_any = false

[[tool.mypy.overrides]]
module = [
    "board",
    "digitalio",
    "adafruit_circuitpython.*",
    "Adafruit_Blinka.*",
    "colorlog",
    "pika",
    "pika.*",
]
ignore_missing_imports = true
